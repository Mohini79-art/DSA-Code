class Solution {
    public int maxFreqSum(String s) {
         HashMap<Character,Integer>vowel=new HashMap<>();
        HashMap<Character,Integer>consonant=new HashMap<>();
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            if(ch=='a' || ch=='e' || ch=='i'|| ch=='o'|| ch=='u'){
                vowel.put(ch,vowel.getOrDefault(ch,0)+1);
            }
            else{
                 consonant.put(ch,consonant.getOrDefault(ch,0)+1);
            }
           
        }
        int mostfreqvowel=0;
       int mostfreqconsonant=0;
        
        List<Map.Entry<Character,Integer>>list=new ArrayList<>(vowel.entrySet());
        Collections.sort(list,(a,b) -> a.getValue() - b.getValue());
         List<Map.Entry<Character,Integer>>list1=new ArrayList<>(consonant.entrySet());
        Collections.sort(list1,(a,b) -> a.getValue() - b.getValue());
        if (list.size() > 0) {
    mostfreqvowel = list.get(list.size() - 1).getValue();
}
if (list1.size() > 0) {
    mostfreqconsonant = list1.get(list1.size() - 1).getValue();
}
       

        
    return mostfreqvowel+mostfreqconsonant;
    }
}
